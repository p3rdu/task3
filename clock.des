INITIALIZER:
    from Tkinter import *
    from DWatchGUI import DWatchGUI

    root = Tk()
    root.title("A Title")
    g = DWatchGUI(root, eventhandler)

    eventhandler.start()

    root.mainloop()
    exit()

STATECHART:
    A [CS][DS] 
     A0 [DS]
     A1
     SETHOURS
     SETMINUTES
     SETSECONDS
    B [CS][DS]
     B0 [DS]
     B1 
     B2
    C [CS][DS]
     TIMEDISPLAY [DS]
     ALARMDISPLAY
     ALARMTOSET
     SETALARM
     CHRONODISPLAY
    D [CS][DS]
     CHRONOSTOPPED [DS]
     CHRONORUNNING 
         
    
TRANSITION:
    S: B.B0
    N: B.B1
    E: lightOn
    O: print "set light on"
       g.setIndiglo()

TRANSITION:
    S: B.B1
    N: B.B2
    E: lightOff
    O: print "light goes off after 2 sec"

TRANSITION:
    S: B.B2
    N: B.B0
    T: 2  # by default, it is [RTT]
    O: print "light off"
       g.unsetIndiglo()       
       
TRANSITION:
    S: A.A0
    N: A.A0
    T: 1  # by default, it is [RTT]
    O: g.increaseTimeByOne()
    
TRANSITION:
    S: A.A0
    N: A.A1
    C: [INSTATE("C.TIMEDISPLAY")]
    E: initChrono
    O: print "bottom right pressed"
    
TRANSITION:
    S: A.A1
    N: A.A0
    E: released
    O: print "bottom right released"            
    
TRANSITION:
    S: A.A1
    N: A.SETHOURS
    T: 1.5  # by default, it is [RTT]
    O: g.startSelection()
    
TRANSITION:
    S: A.SETHOURS
    N: A.SETHOURS
    E: increase
    O: g.increaseSelection()
    
TRANSITION:
    S: A.SETHOURS
    N: A.SETMINUTES
    E: editTime
    O: g.selectNext()

TRANSITION:
    S: A.SETMINUTES
    N: A.SETMINUTES
    E: increase
    O: g.increaseSelection() 
    
TRANSITION:
    S: A.SETMINUTES
    N: A.SETSECONDS
    E: editTime
    O: g.selectNext()

TRANSITION:
    S: A.SETSECONDS
    N: A.SETSECONDS
    E: increase
    O: g.increaseSelection()
    
TRANSITION:
    S: A.SETSECONDS
    N: A.A0
    T: 5
    O: g.stopSelection()
       g.refreshTimeDisplay()

TRANSITION:
    S: A.SETMINUTES
    N: A.A0
    T: 5
    O: g.stopSelection()
       g.refreshTimeDisplay()

TRANSITION:
    S: A.SETHOURS
    N: A.A0
    T: 5
    O: g.stopSelection() 
       g.refreshTimeDisplay()
       
TRANSITION:
    S: C.TIMEDISPLAY
    N: C.TIMEDISPLAY
    T: 1
    O: g.refreshTimeDisplay()       

TRANSITION:
    S: C.CHRONODISPLAY
    N: C.CHRONODISPLAY
    T: 0.01
    O: g.refreshChronoDisplay()
           
TRANSITION:
    S: C.TIMEDISPLAY
    N: C.CHRONODISPLAY
    E: changeMode
    O: g.refreshChronoDisplay()
    
TRANSITION:
    S: C.TIMEDISPLAY
    N: C.ALARMTOSET
    E: setAlarm
    O: g.refreshAlarmDisplay()
    
TRANSITION:
    S: C.ALARMTOSET
    N: C.SETALARM
    T: 1.5
    O: g.startSelection()
    
TRANSITION:
    S: C.SETALARM
    N: C.ALARMDISPLAY
    T: 5
    O: g.stopSelection()
       g.refreshAlarmDisplay()
     
TRANSITION:
    S: C.ALARMTOSET
    N: C.ALARMDISPLAY
    E: onoff
    O: g.refreshAlarmDisplay()    
    
TRANSITION:
    S: C.ALARMDISPLAY
    N: C.TIMEDISPLAY
    E: setAlarm
    O: g.refreshAlarmDisplay()         

TRANSITION:
    S: C.CHRONODISPLAY
    N: C.TIMEDISPLAY
    E: changeMode
    O: g.refreshTimeDisplay()
    
TRANSITION:
    S: D.CHRONOSTOPPED
    N: D.CHRONORUNNING
    C: [INSTATE("C.CHRONODISPLAY")]
    E: initChrono
    O: print "Start running chrono" 

TRANSITION:
    S: D.CHRONORUNNING
    N: D.CHRONORUNNING
    T: 0.01
    O: g.increaseChronoByOne()
    
TRANSITION:
    S: D.CHRONORUNNING
    N: D.CHRONOSTOPPED
    C: [INSTATE("C.CHRONODISPLAY")]
    E: initChrono
    O: print "Stop chrono"
    
TRANSITION:
    S: D.CHRONORUNNING
    N: D.CHRONORUNNING
    C: [INSTATE("C.CHRONODISPLAY")]
    E: resetChrono
    O: g.resetChrono()
    
TRANSITION:
    S: D.CHRONOSTOPPED
    N: D.CHRONOSTOPPED
    C: [INSTATE("C.CHRONODISPLAY")]
    E: resetChrono
    O: g.resetChrono()                 
    
                                                                    